version: '3.8'
services:
  ambev.developerevaluation.webapi:
    container_name: ambev_developer_evaluation_webapi
    image: ${DOCKER_REGISTRY-}ambevdeveloperevaluationwebapi
    build:
      context: .
      dockerfile: src/Ambev.DeveloperEvaluation.WebApi/Dockerfile
      args:
        - BUILD_CONFIGURATION=${BUILD_CONFIGURATION:-Release}
    depends_on:
      ambev.developerevaluation.database:
        condition: service_healthy
      ambev.developerevaluation.nosql:
        condition: service_healthy
      ambev.developerevaluation.cache:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      # Removed the certificate password line
      - ConnectionStrings__DefaultConnection=Host=ambev.developerevaluation.database;Port=5432;Database=developer_evaluation;Username=developer;Password=ev@luAt10n
      - ConnectionStrings__MongoDB=mongodb://developer:ev%40luAt10n@ambev.developerevaluation.nosql:27017
      - ConnectionStrings__Redis=ambev.developerevaluation.cache:6379,password=ev@luAt10n
    ports:
      - "8080:8080"  # HTTP only (removed HTTPS port)
    volumes:
      - ${APPDATA}/ASP.NET/Https:/https:ro
      - ${HOME}/.aspnet/https:/https:ro  # Cross-platform compatibility
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/DataProtection-Keys:/keys:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    networks:
      - ambev-network
  ambev.developerevaluation.database:
    container_name: ambev_developer_evaluation_database
    image: postgres:13
    environment:
      POSTGRES_DB: developer_evaluation
      POSTGRES_USER: developer
      POSTGRES_PASSWORD: ev@luAt10n
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U developer -d developer_evaluation"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
    restart: unless-stopped
    networks:
      - ambev-network
  ambev.developerevaluation.nosql:
    container_name: ambev_developer_evaluation_nosql
    image: mongo:8.0
    environment:
      MONGO_INITDB_ROOT_USERNAME: developer
      MONGO_INITDB_ROOT_PASSWORD: ev@luAt10n
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
    restart: unless-stopped
    networks:
      - ambev-network
  ambev.developerevaluation.cache:
    container_name: ambev_developer_evaluation_cache
    image: redis:7.4.1-alpine
    command: redis-server --requirepass ev@luAt10n
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "ev@luAt10n", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - ambev-network
volumes:
  pgdata:
    driver: local
  mongodata:
    driver: local
  redisdata:
    driver: local
networks:
  ambev-network:
    driver: bridge
    attachable: true